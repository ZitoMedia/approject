<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:activiti="http://activiti.org/bpmn" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI" typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath" targetNamespace="http://activiti.org/bpmn20">
    <process id="ZitoAPDirect" name="Zito AP Direct workflow" isExecutable="true">
        <startEvent id="start" activiti:formKey="wf:submitParallelReviewTask"></startEvent>
        <sequenceFlow id="flow1" sourceRef="start" targetRef="apProcessTask">
            <extensionElements>
                <activiti:executionListener event="start"
                                            class="org.alfresco.repo.workflow.activiti.listener.ScriptExecutionListener">
                    <activiti:field name="runAs"><activiti:string>admin</activiti:string></activiti:field>
                    <activiti:field name="script">
                        <activiti:string>var UUID = new Date().getTime();
                            if (logger.isLoggingEnabled()) {
                                logger.log("Zito AP Direct workflow started " + UUID);
                            }
                            for (var i = 0, length = bpm_package.children.length ; i &lt; length ; i++) {
                                var payload =  bpm_package.children[i];
                                payload.specializeType('zitomedia:invoice');
                                if (!payload.hasAspect('zitomedia:ap')) {
                                    payload.addAspect('zitomedia:ap');
                                }
                                payload.properties['zitomedia:status'] = 'Supervisor Assigned';
                                payload.save();
                                if (logger.isLoggingEnabled()) {
                                    logger.log("Zito AP Direct workflow " + UUID + " Payload: " + payload.properties['cm:name']);
                                }
                                var parent = payload.parent.parent;
                                if (parent != null) {
                                    var assignedParent = parent.childByNamePath('Assigned');
                                    if (assignedParent != null) {
                                        var assignedFolder = assignedParent.childByNamePath(UUID);
                                        if (assignedFolder == null) {
                                            assignedFolder = assignedParent.createFolder(UUID);
                                        }
                                        payload.move(assignedFolder);
                                        if (logger.isLoggingEnabled()) {
                                            logger.log("Zito AP Direct workflow " + UUID + " moved payload to assigned folder");
                                        }
                                    }
                                }
                            }
                        </activiti:string>
                    </activiti:field>
                </activiti:executionListener>
            </extensionElements>
        </sequenceFlow>
        <userTask id="apProcessTask" name="AP Process Task" activiti:assignee="betsy.ayers" activiti:formKey="zitomediawf:zitoMediaAPProcessTask">
            <extensionElements>
                <activiti:taskListener event="create" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string>task.description = "AP processes invoice ";
                            if ( bpm_package.children.length &gt; 0 ) {
                                task.description += bpm_package.children[0].properties['cm:name'];
                            }
                            if (typeof bpm_workflowDueDate != 'undefined') task.dueDate = bpm_workflowDueDate;
                            if (typeof bpm_workflowPriority != 'undefined') task.priority = bpm_workflowPriority;
                            for (var i = 0, length = bpm_package.children.length ; i &lt; length ; i++) {
                                if (bpm_package.children[i].properties['zitomedia:voucherNumber'] != null) {
                                    task.setVariableLocal('zitomediawf_voucherNumber', bpm_package.children[i].properties['zitomedia:voucherNumber']);
                                }
                                if (bpm_package.children[i].properties['zitomedia:customerCategory'] != null) {
                                    task.setVariableLocal('zitomediawf_customerCategory', bpm_package.children[i].properties['zitomedia:customerCategory']);
                                }
                            }
                            if (logger.isLoggingEnabled()) {
                                logger.log("Zito AP Direct workflow : Task " + task.id + ":" + " apProcessTask created " + task.description);
                            }
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
                <activiti:taskListener event="complete" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string>if (logger.isLoggingEnabled()) {
                            logger.log("Zito AP Direct workflow : Task " + task.id + ":" + " apProcessTask completed.");
                            }
                            if (logger.isLoggingEnabled()) {
                                logger.log("zitomediawf_voucherNumber:" + task.getVariable('zitomediawf_voucherNumber'));
                                logger.log("zitomediawf_customerCategory:" + task.getVariable('zitomediawf_customerCategory'));
                            }
                            for (var i = 0, length = bpm_package.children.length ; i &lt; length ; i++) {
                                var payload = bpm_package.children[i];
                                payload.properties['zitomedia:voucherNumber'] = task.getVariable('zitomediawf_voucherNumber');
                                payload.properties['zitomedia:customerCategory'] = task.getVariable('zitomediawf_customerCategory');
                                payload.properties['zitomedia:status'] = 'AP Approved';
                                payload.save();
                                if (logger.isLoggingEnabled()) {
                                    logger.log("Zito AP Direct workflow : Task " + task.id + ":" + " apProcessTask Payload " + payload.properties['cm:name'] + " saved!");
                                }
                                var parent = payload.parent.parent.parent;
                                if (parent != null &amp;&amp; parent.childByNamePath('Processing') != null) {
                                    var processingFolder = parent.childByNamePath('Processing').childByNamePath(task.getVariable('zitomediawf_customerCategory'));
                                    if (processingFolder != null) {
                                        payload.move(processingFolder);
                                        if (logger.isLoggingEnabled()) {
                                            logger.log("Zito AP Direct workflow : Task " + task.id + ":" + " apProcessTask Payload " + payload.properties['cm:name'] + " moved!");
                                        }
                                    }
                                }
                            }
                            execution.setVariable('bpm_assignee', person);
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
            </extensionElements>
        </userTask>
        <exclusiveGateway id="finalReviewDecision" name="Final Review Decision"></exclusiveGateway>
        <sequenceFlow id="flow7" sourceRef="apProcessTask" targetRef="finalReviewTask"></sequenceFlow>
        <userTask id="finalReviewTask" name="Final Review Task" activiti:assignee="james.rigas" activiti:formKey="zitomediawf:zitoMediaFinalReviewTask">
            <extensionElements>
                <activiti:taskListener event="create" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string>task.description = "Performs final review of invoice ";
                            if ( bpm_package.children.length &gt; 0 ) {
                                task.description += bpm_package.children[0].properties['cm:name'];
                            }
                            if (typeof bpm_workflowDueDate != 'undefined') task.dueDate = bpm_workflowDueDate;
                            if (typeof bpm_workflowPriority != 'undefined') task.priority = bpm_workflowPriority;
                            for (var i = 0, length = bpm_package.children.length ; i &lt; length ; i++) {
                                if (bpm_package.children[i].properties['zitomedia:voucherNumber'] != null) {
                                    task.setVariableLocal('zitomediawf_voucherNumber', bpm_package.children[i].properties['zitomedia:voucherNumber']);
                                }
                                if (bpm_package.children[i].properties['zitomedia:customerCategory'] != null) {
                                    task.setVariableLocal('zitomediawf_customerCategory', bpm_package.children[i].properties['zitomedia:customerCategory']);
                                }
                            }
                            if (logger.isLoggingEnabled()) {
                                logger.log("Zito AP Direct workflow : Task " + task.id + ":" + task.description);
                                logger.log("Zito AP Direct workflow : Task " + task.id + ":" + " finalReviewTask zitomediawf_voucherNumber:" + task.getVariable('zitomediawf_voucherNumber'));
                                logger.log("Zito AP Direct workflow : Task " + task.id + ":" + " finalReviewTask zitomediawf_customerCategory:" + task.getVariable('zitomediawf_customerCategory')) ;
                            }
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
                <activiti:taskListener event="complete" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string>var reviewOutcome = task.getVariable('wf_reviewOutcome');
                            execution.setVariable('wf_reviewOutcome', reviewOutcome);
                            execution.setVariable('bpm_assignee', person);
                            if (logger.isLoggingEnabled()) {
                                logger.log("Zito AP Direct workflow : Task " + task.id + ":" + " finalReviewTask completed" + reviewOutcome);
                            }
                            for (var i = 0, length = bpm_package.children.length ; i &lt; length ; i++) {
                                var payload = bpm_package.children[i];
                                if (reviewOutcome == 'Approve') {
                                    payload.properties['zitomedia:status'] = 'Final Approved';
                                    payload.save();
                                } else {
                                    payload.properties['zitomedia:status'] = 'Final Rejected';
                                    payload.save();
                                    var parent = payload.parent.parent.parent;
                                    var customerCategory = payload.properties['zitomedia:customerCategory'];
                                    if (parent != null &amp;&amp; parent.childByNamePath('Rejected') != null) {
                                        var rejectedFolder = parent.childByNamePath('Rejected').childByNamePath(customerCategory);
                                        if (rejectedFolder != null) {
                                            payload.move(rejectedFolder);
                                            if (logger.isLoggingEnabled()) {
                                                logger.log("Zito AP Direct workflow : Task " + task.id + ":" + " finalReviewTask payload moved " + payload.properties["cm:name"]);
                                            }
                                        }
                                    }
                                }
                            }
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
            </extensionElements>
        </userTask>
        <sequenceFlow id="flow12" sourceRef="finalReviewTask" targetRef="finalReviewDecision"></sequenceFlow>
        <sequenceFlow id="flow13" sourceRef="finalReviewDecision" targetRef="payCustomer">
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[${wf_reviewOutcome == 'Approve'}]]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="flow14" sourceRef="finalReviewDecision" targetRef="apReviewTask">
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[${wf_reviewOutcome == 'Reject'}]]></conditionExpression>
        </sequenceFlow>
        <userTask id="apReviewTask" name="AP Review Task" activiti:assignee="julie.petruzzi" activiti:formKey="zitomediawf:zitoMediaAPReviewTask">
            <extensionElements>
                <activiti:taskListener event="create" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string>task.description = "AP reviews final rejected invoice ";
                            if ( bpm_package.children.length &gt; 0 ) {
                                task.description += bpm_package.children[0].properties['cm:name'];
                            }
                            if (typeof bpm_workflowDueDate != 'undefined') task.dueDate = bpm_workflowDueDate;
                            if (typeof bpm_workflowPriority != 'undefined') task.priority = bpm_workflowPriority;
                            for (var i = 0, length = bpm_package.children.length ; i &lt; length ; i++) {
                                if (bpm_package.children[i].properties['zitomedia:voucherNumber'] != null) {
                                    task.setVariableLocal('zitomediawf_voucherNumber', bpm_package.children[i].properties['zitomedia:voucherNumber']);
                                }
                                if (bpm_package.children[i].properties['zitomedia:customerCategory'] != null) {
                                    task.setVariableLocal('zitomediawf_customerCategory', bpm_package.children[i].properties['zitomedia:customerCategory']);
                                }
                            }
                            if (logger.isLoggingEnabled()) {
                                logger.log("Zito AP Direct workflow : Task " + task.id + ":" + " apReviewTask created " + task.description);
                                logger.log("Zito AP Direct workflow : Task " + task.id + ":" + " apReviewTask zitomediawf_voucherNumber:" + task.getVariable('zitomediawf_voucherNumber'));
                                logger.log("Zito AP Direct workflow : Task " + task.id + ":" + " apReviewTask zitomediawf_customerCategory:" + task.getVariable('zitomediawf_customerCategory')) ;
                            }
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
                <activiti:taskListener event="complete" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string>var reviewOutcome = task.getVariable('wf_reviewOutcome');
                            execution.setVariable('wf_reviewOutcome', task.getVariable('wf_reviewOutcome'));
                            execution.setVariable('bpm_assignee', person);
                            if (logger.isLoggingEnabled()) {
                                logger.log("Zito AP Direct workflow : Task " + task.id + ":" + " apReviewTask completed " + reviewOutcome);
                            }
                            for (var i = 0, length = bpm_package.children.length ; i &lt; length ; i++) {
                                var payload = bpm_package.children[i];
                                if (reviewOutcome == 'Approve') {
                                    payload.properties['zitomedia:status'] = 'AP Approved';
                                    payload.save();
                                    var parent = payload.parent.parent.parent;
                                    var customerCategory = payload.properties['zitomedia:customerCategory'];
                                    if (parent != null &amp;&amp; parent.childByNamePath('Incoming') != null) {
                                        payload.move(parent.childByNamePath('Incoming'));
                                        if (logger.isLoggingEnabled()) {
                                            logger.log("Zito AP Direct workflow : Task " + task.id + ":" + " apReviewTask payload approved and moved " + payload.properties["cm:name]);
                                        }
                                    }
                                } else {
                                    payload.properties['zitomedia:status'] = 'AP Rejected';
                                    payload.save();
                                    if (logger.isLoggingEnabled()) {
                                        logger.log("Zito AP Direct workflow : Task " + task.id + ":" + " apReviewTask payload rejected " + payload.properties["cm:name]);
                                    }
                                }
                            }
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
            </extensionElements>
        </userTask>
        <exclusiveGateway id="apReviewDecision" name="AP Review Decision"></exclusiveGateway>
        <sequenceFlow id="flow18" sourceRef="apReviewTask" targetRef="apReviewDecision"></sequenceFlow>
        <sequenceFlow id="flow8" sourceRef="apReviewDecision" targetRef="endevent1">
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[${wf_reviewOutcome == 'Approve'}]]></conditionExpression>
        </sequenceFlow>
        <userTask id="apRejected" name="AP Rejected" activiti:assignee="${initiator.properties.userName}" activiti:formKey="zitomediawf:zitoMediaAPRejectedTask">
            <documentation>The document was reviewed and rejected by AP.</documentation>
            <extensionElements>
                <activiti:taskListener event="create" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string>task.description = "Contact customer for AP rejected invoice ";
                            if ( bpm_package.children.length &gt; 0 ) {
                                task.description += bpm_package.children[0].properties['cm:name'];
                            }
                            if (typeof bpm_workflowDueDate != 'undefined') task.dueDate = bpm_workflowDueDate;
                            if (typeof bpm_workflowPriority != 'undefined') task.priority = bpm_workflowPriority;</activiti:string>
                    </activiti:field>
                </activiti:taskListener>
            </extensionElements>
        </userTask>
        <sequenceFlow id="flow9" sourceRef="apReviewDecision" targetRef="apRejected">
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[${wf_reviewOutcome == 'Reject'}]]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="flow11" sourceRef="apRejected" targetRef="endevent1"></sequenceFlow>

        <!--
        <sequenceFlow id="flow16" sourceRef="finalRejected" targetRef="apReviewTask"></sequenceFlow>
        -->
        <userTask id="payCustomer" name="Pay Customer" activiti:candidateGroups="GROUP_AccountsPayable" activiti:formKey="zitomediawf:zitoMediaPayCustomerTask">
            <documentation>The invoice has been approved and invoice needs to send to customer.</documentation>
            <extensionElements>
                <activiti:taskListener event="create" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string>task.description = "Pays customer for approved invoice ";
                            if ( bpm_package.children.length &gt; 0 ) {
                                task.description += bpm_package.children[0].properties['cm:name'];
                            }
                            if (typeof bpm_workflowDueDate != 'undefined') task.dueDate = bpm_workflowDueDate;
                            if (typeof bpm_workflowPriority != 'undefined') task.priority = bpm_workflowPriority;
                            for (var i = 0, length = bpm_package.children.length ; i &lt; length ; i++) {
                                if (bpm_package.children[i].properties['zitomedia:voucherNumber'] != null) {
                                    task.setVariableLocal('zitomediawf_voucherNumber', bpm_package.children[i].properties['zitomedia:voucherNumber']);
                                }
                                if (bpm_package.children[i].properties['zitomedia:customerCategory'] != null) {
                                    task.setVariableLocal('zitomediawf_customerCategory', bpm_package.children[i].properties['zitomedia:customerCategory']);
                                }
                            }
                            if (logger.isLoggingEnabled()) {
                                logger.log("Zito AP Direct workflow : Task " + task.id + ":" + " payCustomer " + task.description);
                                logger.log("Zito AP Direct workflow : Task " + task.id + ":" + " payCustomer zitomediawf_voucherNumber:" + task.getVariable('zitomediawf_voucherNumber'));
                                logger.log("Zito AP Direct workflow : Task " + task.id + ":" + " payCustomer zitomediawf_customerCategory:" + task.getVariable('zitomediawf_customerCategory')) ;
                            }
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
                <activiti:taskListener event="complete" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string>for (var i = 0, length = bpm_package.children.length ; i &lt; length ; i++) {
                                var payload = bpm_package.children[i];
                                payload.properties['zitomedia:status'] = 'Customer Paid';
                                payload.save();
                                if (logger.isLoggingEnabled()) {
                                    logger.log("Zito AP Direct workflow : Task " + task.id + ":" + " payCustomer payload saved " + payload.properties["cm:name"]);
                                }
                                var parent = payload.parent.parent.parent;
                                var customerCategory = payload.properties['zitomedia:customerCategory'];
                                if (parent != null &amp;&amp; parent.childByNamePath('Processed') != null) {
                                    var processedFolder = parent.childByNamePath('Processed').childByNamePath(customerCategory);
                                    if (processedFolder != null) {
                                        payload.move(processedFolder);
                                        if (logger.isLoggingEnabled()) {
                                            logger.log("Zito AP Direct workflow : Task " + task.id + ":" + " payCustomer payload moved " + payload.properties["cm:name"]);
                                        }
                                    }
                                }
                            }
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
            </extensionElements>
        </userTask>
        <userTask id="processCompleted" name="Process Completed" activiti:assignee="${initiator.properties.userName}" activiti:formKey="zitomediawf:zitoMediaCompletedTask">
            <documentation>Process completed.</documentation>
            <extensionElements>
                <activiti:taskListener event="create" class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
                    <activiti:field name="script">
                        <activiti:string>task.description = "Completes review process for invoice ";
                            if ( bpm_package.children.length &gt; 0 ) {
                                task.description += bpm_package.children[0].properties['cm:name'];
                            }
                            if (typeof bpm_workflowDueDate != 'undefined') task.dueDate = bpm_workflowDueDate;
                            if (typeof bpm_workflowPriority != 'undefined') task.priority = bpm_workflowPriority;
                            for (var i = 0, length = bpm_package.children.length ; i &lt; length ; i++) {
                                if (bpm_package.children[i].properties['zitomedia:voucherNumber'] != null) {
                                    task.setVariableLocal('zitomediawf_voucherNumber', bpm_package.children[i].properties['zitomedia:voucherNumber']);
                                }
                                if (bpm_package.children[i].properties['zitomedia:customerCategory'] != null) {
                                    task.setVariableLocal('zitomediawf_customerCategory', bpm_package.children[i].properties['zitomedia:customerCategory']);
                                }
                            }
                            if (logger.isLoggingEnabled()) {
                                logger.log("Zito AP Direct workflow : Task " + task.id + ":" + " processCompleted " +task.description);
                                logger.log("Zito AP Direct workflow : Task " + task.id + ":" + " processCompleted zitomediawf_voucherNumber:" + task.getVariable('zitomediawf_voucherNumber'));
                                logger.log("Zito AP Direct workflow : Task " + task.id + ":" + " processComplated zitomediawf_customerCategory:" + task.getVariable('zitomediawf_customerCategory')) ;
                            }
                        </activiti:string>
                    </activiti:field>
                </activiti:taskListener>
            </extensionElements>
        </userTask>
        <sequenceFlow id="flow15" sourceRef="payCustomer" targetRef="processCompleted"></sequenceFlow>
        <endEvent id="endevent1" name="End"></endEvent>
        <sequenceFlow id="flow17" sourceRef="processCompleted" targetRef="endevent1"></sequenceFlow>
    </process>
</definitions>
